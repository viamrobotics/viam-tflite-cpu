FROM debian:bookworm

ENV HOME /root
ARG DEBIAN_FRONTEND=noninteractive

RUN apt-get update

RUN apt-get -y dist-upgrade

RUN apt-get -y --no-install-recommends install \
    build-essential \
    ca-certificates \
    cmake \
    curl \
    doxygen \
    g++ \
    gdb \
    git \
    gnupg \
    gpg \
    less \
    libabsl-dev \
    libboost-all-dev \
    libgrpc++-dev \
    libprotobuf-dev \
    libssl-dev \
    libxtensor-dev \
    ninja-build \
    pkg-config \
    protobuf-compiler-grpc \
    software-properties-common \
    sudo \
    vim \
    wget

RUN bash -c 'wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|apt-key add -'
RUN apt-add-repository -y 'deb http://apt.llvm.org/bookworm/ llvm-toolchain-bookworm-15 main'
# NOTE: For reasons I cannot explain, the first invocation of apt-add-repository fails
# but the second works fine. I suspect a Debian bug
RUN apt-add-repository -y 'deb http://apt.llvm.org/bookworm/ llvm-toolchain-bookworm-15 main'
RUN apt-get update

RUN apt-get -y --no-install-recommends install -t llvm-toolchain-bookworm-15 \
    clang-15 \
    clang-tidy-15

RUN mkdir -p /root/opt/src
# Install Viam C++ SDK from source frozen at a tag
RUN cd /root/opt/src && \
    git clone https://github.com/viamrobotics/viam-cpp-sdk && \
    cd viam-cpp-sdk && \
    git fetch --all --tags && \
    git checkout releases/v0.0.10 && \
    mkdir build && \
    cd build && \
    cmake -DBUILD_SHARED_LIBS=OFF \
        -DCMAKE_BUILD_TYPE=RelWithDebInfo \
        -DVIAMCPPSDK_USE_DYNAMIC_PROTOS=ON \
        -DVIAMCPPSDK_OFFLINE_PROTO_GENERATION=ON \
        -DCMAKE_INSTALL_PREFIX=/usr/local \
        -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
        -DCMAKE_CXX_FLAGS="-fPIC" \
        -DCMAKE_C_FLAGS="-fPIC" \
         .. -G Ninja  && \
    ninja all -j 4 && \
    ninja install -j 4 && \
    rm -rf /root/opt/src/viam-cpp-sdk

# Install GTest
RUN apt install -y libgtest-dev

RUN cd /root/opt/src && \
    git clone https://github.com/tensorflow/tensorflow.git && \
    cd tensorflow && \
    git fetch --all --tags && \
    git checkout v2.13.0 && \
    cd tensorflow/lite/c && \
    mkdir build && \
    cd build && \
    cmake -DBUILD_SHARED_LIBS=OFF \
        -DTFLITE_C_BUILD_SHARED_LIBS= OFF \
        -DTFLITE_C_ABSL_PROVIDER=package \
        -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_CXX_FLAGS="-fPIC" \
        -DCMAKE_C_FLAGS="-fPIC" \
         .. -G Ninja  && \
    ninja all -j 4 && \
    ninja install -j 4 

# Also build the .so files
RUN cd /root/opt/src && \
    git clone https://github.com/viamrobotics/viam-cpp-sdk && \
    cd viam-cpp-sdk && \
    git fetch --all --tags && \
    git checkout releases/v0.0.10 && \
    mkdir build && \
    cd build && \
    cmake -DBUILD_SHARED_LIBS=ON \
        -DCMAKE_BUILD_TYPE=RelWithDebInfo \
        -DVIAMCPPSDK_USE_DYNAMIC_PROTOS=ON \
        -DVIAMCPPSDK_OFFLINE_PROTO_GENERATION=ON \
        -DCMAKE_INSTALL_PREFIX=/usr/local \
        -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
        -DCMAKE_CXX_FLAGS="-fPIC" \
        -DCMAKE_C_FLAGS="-fPIC" \
         .. -G Ninja  && \
    ninja all -j 4 && \
    ninja install -j 4 && \
    rm -rf /root/opt/src/viam-cpp-sdk

RUN apt install -y \
    binutils \
    coreutils \
    desktop-file-utils \
    fakeroot \
    fuse \
    libgdk-pixbuf2.0-dev \
    patchelf \
    python3-pip python3-setuptools \
    squashfs-tools \
    strace \
    vim \
    libgtk-3-dev \
    util-linux zsync

RUN pip3 install -U pip setuptools urllib3==1.26.12 requests==2.26.0 --break-system-packages

# install appimage-builder
RUN pip3 install --break-system-packages git+https://github.com/AppImageCrafters/appimage-builder.git@f38699ef3644fa5409a5a262b7b6d99d6fb85db9

# install Go
RUN apt install -y golang-go
